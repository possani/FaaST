---
# file: roles/openwhisk/tasks/main.yml
- name: Label node for running openwhisk
  command: kubectl label node {{ ansible_hostname }} openwhisk-role=core
  ignore_errors: True

- name: Copy mycluster to host
  template:
    src: "{{ role_path }}/templates/mycluster.yaml.j2"
    dest: $PWD/mycluster.yaml
    mode: "0644"

- name: Clone Openwhisk's git repository
  git:
    repo: https://github.com/apache/openwhisk-deploy-kube.git
    dest: $PWD/openwhisk
    force: yes

- name: Copy whiskconfig.conf
  copy:
    src: "{{ role_path }}/files/whiskconfig.conf"
    dest: $PWD/openwhisk/helm/openwhisk/whiskconfig.conf

- name: Get Helm releases
  shell: /snap/bin/helm list -A
  register: helm_releases

- name: Install Openwhisk
  command: /snap/bin/helm install owdev openwhisk/helm/openwhisk -n openwhisk --create-namespace -f mycluster.yaml
  when: helm_releases.stdout.find('owdev') == -1

- name: Label node for running openwhisk
  command: kubectl label nodes --all openwhisk-role=invoker --overwrite

- name: Install Openwhisk CLI
  unarchive:
    src: https://github.com/apache/openwhisk-cli/releases/download/latest/OpenWhisk_CLI-latest-linux-amd64.tgz
    dest: /usr/bin
    remote_src: yes
  become: True

- name: Set CLI properties
  command: "wsk property set --apihost {{ ansible_default_ipv4.address }}:{{ node_port }} --auth {{ auth_key }}"

- name: Update root_url and disable anonymous login
  command: kubectl -n openwhisk set env deployment/owdev-grafana GF_SERVER_ROOT_URL=http://localhost:8001/api/v1/namespaces/openwhisk/services/http:owdev-grafana:http/proxy/ GF_AUTH_ANONYMOUS_ENABLED=false

- name: Copy pv.yaml
  copy:
    src: "{{ role_path }}/files/pv.yaml"
    dest: $PWD/pv.yaml

- name: Create persistent volume
  command: kubectl -n openwhisk apply -f pv.yaml

- name: Add bitnami repo
  command: /snap/bin/helm repo add bitnami https://charts.bitnami.com/bitnami

- name: Install MinIO
  command: /snap/bin/helm install minio bitnami/minio --set accessKey.password=minio-access-key --set secretKey.password=minio-secret-key --set service.type=NodePort --set service.nodePort=31003 --set defaultBuckets=openwhisk

- name: Install MongoDB
  command: /snap/bin/helm install mongodb bitnami/mongodb --set auth.username=mongodb --set auth.password=master-thesis --set auth.database=openwhisk

- name: Copy daemon-rbac.yaml
  copy:
    src: "{{ role_path }}/files/daemon-rbac.yaml"
    dest: $PWD/daemon-rbac.yaml

- name: Create daemon Role and RoleBinding
  command: kubectl -n openwhisk apply -f daemon-rbac.yaml

- name: Create watcher Deployment
  command: kubectl -n openwhisk create deployment watcher --image=possani/watcher:latest

- name: Configure watcher Deployment
  command: kubectl -n openwhisk set env deployment/watcher SERVER_IP={{ hostvars[inventory_hostname].ansible_host }}

- name: Patch watcher Deployment port
  command: 'kubectl -n openwhisk patch deploy watcher -p ''{"spec": {"template": {"spec": {"containers": [{"name": "watcher", "ports": [{"containerPort": 8080}]}]}}}}'''

- name: Create watcher Service
  command: kubectl -n openwhisk expose deployment watcher --port=80 --target-port=8080 --type=NodePort

- name: Patch watcher Service port
  command: 'kubectl -n openwhisk patch svc watcher -p ''{"spec": {"ports": [{"nodePort": 31004, "port": 80}]}}'''
